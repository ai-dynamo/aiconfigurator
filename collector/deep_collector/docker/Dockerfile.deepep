FROM nvcr.io/nvidia/pytorch:24.04-py3

ARG DEBIAN_FRONTEND=noninteractive

# Step 1: Base setup (match guide)
RUN ln -s /usr/lib/x86_64-linux-gnu/libmlx5.so.1 /usr/lib/x86_64-linux-gnu/libmlx5.so || true \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
       git wget cmake ninja-build build-essential \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /workspace

# Step 2: Acquire DeepEP & NVSHMEM source code (match guide)
RUN git clone https://github.com/deepseek-ai/DeepEP.git

ARG NVSHMEM_VERSION=3.2.5-1
ARG NVSHMEM_ARCHIVE=nvshmem_src_${NVSHMEM_VERSION}.txz
ARG NVSHMEM_URL=https://developer.nvidia.com/downloads/assets/secure/nvshmem/${NVSHMEM_ARCHIVE}

RUN wget -O ${NVSHMEM_ARCHIVE} ${NVSHMEM_URL} \
    && tar -xvf ${NVSHMEM_ARCHIVE} \
    && mv nvshmem_src nvshmem

WORKDIR /workspace/nvshmem

# Apply the patch from DeepEP
RUN git apply /workspace/DeepEP/third-party/nvshmem.patch

# Step 3: NVSHMEM build (match guide)
RUN NVSHMEM_IBGDA_SUPPORT=1 \
    NVSHMEM_SHMEM_SUPPORT=0 \
    NVSHMEM_UCX_SUPPORT=0 \
    NVSHMEM_USE_NCCL=0 \
    NVSHMEM_PMIX_SUPPORT=0 \
    NVSHMEM_TIMEOUT_DEVICE_POLLING=0 \
    NVSHMEM_USE_GDRCOPY=0 \
    NVSHMEM_IBRC_SUPPORT=0 \
    NVSHMEM_BUILD_TESTS=0 \
    NVSHMEM_BUILD_EXAMPLES=0 \
    NVSHMEM_MPI_SUPPORT=0 \
    NVSHMEM_BUILD_HYDRA_LAUNCHER=0 \
    NVSHMEM_BUILD_TXZ_PACKAGE=0 \
    cmake -G Ninja -S . -B build  -DCMAKE_INSTALL_PREFIX=/workspace/nvshmem/install \
    && cmake --build build/ --target install

# Step 4: DeepEP build (match guide)
WORKDIR /workspace/DeepEP
ENV NVSHMEM_DIR=/workspace/nvshmem/install
ENV TORCH_CUDA_ARCH_LIST=9.0+PTX
RUN pip install -e .

WORKDIR /workspace

# Note: When running the container, use runtime flags similar to the guide, e.g.:
#   --gpus all --privileged --ipc=host --net=host



